package main

import (
	// _ "evermos-test/docs" // docs is generated by Swag CLI, you have to import it.

	"evermos-test/config/boot"
	cfg "evermos-test/config/env"
	_ "evermos-test/docs"

	"github.com/go-playground/locales/en"
	"github.com/go-playground/universal-translator"
	"github.com/labstack/echo/v4"
	"gopkg.in/go-playground/validator.v9"
	enTranslations "gopkg.in/go-playground/validator.v9/translations/en"
)

type App struct {
	config cfg.Config
}

var app App

var (
	validatorDriver *validator.Validate
	uni             *ut.UniversalTranslator
	translator      ut.Translator
)

func init() {
	config := cfg.NewViperConfig()
	app = App{config: config}

	// if config.GetBool(`app.debug`) {
	// 	fmt.Println("Service RUN on DEBUG mode. Port: " + config.GetString("app.host"))
	// }
}

// @title Swagger Example API
// @version 1.0
// @description This is a sample server Petstore server.
// @termsOfService http://swagger.io/terms/

// @contact.name API Support
// @contact.url http://www.swagger.io/support
// @contact.email support@swagger.io

// @license.name Apache 2.0
// @license.url http://www.apache.org/licenses/LICENSE-2.0.html

// @host petstore.swagger.io
// @BasePath /v2
func main() {

	registerValidator()
	e := echo.New()

	apiHandler := boot.HTTPHandler{
		E:               e,
		Config:          app.config,
		ValidatorDriver: validatorDriver,
		Translator:      translator,
	}

	// apiHandler.RegisterMiddleware()
	apiHandler.RegisterApiHandler()

	e.Start(app.config.GetString(`app.host`))
}

func registerValidator() {
	en := en.New()
	uni = ut.New(en, en)

	trans, _ := uni.GetTranslator("en")
	translator = trans

	validatorDriver = validator.New()
	enTranslations.RegisterDefaultTranslations(validatorDriver, translator)
}
